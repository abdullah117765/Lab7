





// Using Node.js `require()`
const mongoose = require('mongoose');

 mongoose.connect("mongodb://localhost:27017/fruitsDb", {useNewUrlParser :true});



const fruitSchema = new  mongoose.Schema({
    name: String,
    rating : {
        type: Number,
        min: [0, 'Too few eggs'],   // these are validation of mongoose
        max: 10
      },
    review: String,
  });

const Fruit =mongoose.model("Fruit", fruitSchema);  // Fruits collection

const apple = new Fruit({   // fruit row
    name: "Apple",
    rating : 7,
    review: "Pretty solid fruit."
});

//apple.save();  for saving a single value

const orange = new Fruit({   // fruit row
    name: "Orange",
    rating : 8,
    review: "just love the sourness of it"
});

const melon = new Fruit({   // fruit row
    name: "WaterMelon",
    rating : 8,
    review: "difficult to cut into piecess but taste good"
});




/*
Fruit.insertMany([orange,melon],function(err){
    if(err){
        console.log(err);

    }else{
        console.log("Successfully saved all the fruits to fruitDb");
    }
});

*/


// now we will learn how to  get from database


// this fruits here is an array that is returned from db
Fruit.find(function(err,fruits){ 
if(err){
    console.log(err);
}else{
console.log(fruits);


fruits.forEach(function(fruit){
    console.log(fruit.name);
});

}

});



// now we will se how to update a db we will fetch a record on the basis of id that was generated by db
/*
Fruit.updateOne({ _id:"634a74c3a49bbe651fb50d0b"},{rating: 8},function(err){
    if(err){
        console.log(err);
    }else{
    console.log("Successfully updated the document.");
    }
});

*/

// now we will see how to delete a row from table

Fruit.deleteOne({name:"Apple" },function(err){
    if(err){
        console.log(err);
    }else{
    console.log("Successfully deleted from the document.");
    }
});
